{"version":3,"sources":["store/actionTypes/userActionTypes.js","constants/userStatuses.js","store/reducers/userReducers.js","store/actionTypes/productActionTypes.js","store/reducers/productsReducers.js","store/reducers/index.js","store/index.js","store/actions/productsActions.js","components/ProductItem/index.js","components/ProductManaging/index.js","store/actions/userActions.js","components/LoginForm/index.js","components/LoginModal/index.js","components/RegistrationForm/index.js","components/RegistrationModal/index.js","components/MainMenu/index.js","pages/NoMatchPage/index.js","components/ProductFilters/index.js","components/SortBy/index.js","components/ProductCreationForm/index.js","components/ProductEditingForm/index.js","components/ProductEditingModal/index.js","pages/AdminPanel/index.js","components/ProductCard/index.js","components/Catalog/index.js","pages/CatalogPage/index.js","components/Main/index.js","components/App/index.js","helpers/server.js","index.js"],"names":["loginRequest","loginSuccess","loginFailure","notLoggedIn","registrationRequest","registrationSuccess","registrationFailure","initialState","isLoggedIn","userType","currentStatus","userStatuses","error","getProductsRequest","getProductsSuccess","getProductsFailure","updateProductRequest","updateProductSuccess","updateProductFailure","getProductPagesNumber","setProductPagesNumber","setProductsList","setProductsPage","addProduct","addProductSuccess","addProductFailure","resetProducts","deleteProduct","setCurrentAction","setErrorMessage","setQueryParams","showEditingModal","closeEditingModal","setCurrentProduct","items","pagesNumber","page","currentAction","queryParams","currentProduct","combineReducers","user","state","action","type","actionTypes","email","registrationRequestm","setCurrentStatus","status","products","productActionTypes","setcurrentAction","product","createStore","rootReducer","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","f","params","dispatch","a","url","param","push","join","length","fetch","response","json","body","ok","numberOfPages","console","udpateProductSuccess","udpateProductFailure","props","productData","id","useDispatch","useSelector","date","Date","creationDate","formattedDate","getDate","getMonth","getFullYear","Item","Content","Header","as","name","Meta","className","Description","description","price","Extra","Button","basic","floated","color","onClick","method","log","primary","useState","itemsLoading","setItemsLoading","useEffect","Grid","columns","relaxed","padded","Row","Dimmer","active","inverted","Loader","content","Column","Group","divided","map","ProductItem","key","Pagination","defaultActivePage","activePage","totalPages","onPageChange","e","password","credentials","setCredentials","initialFormErrors","formErrors","setFormErrors","formState","setFormState","resetErrors","loading","success","handleChangeCredentials","fieldName","preventDefault","target","value","Form","onSubmit","Field","control","Input","label","placeholder","onChange","icon","errors","pointing","requestOptions","headers","JSON","stringify","login","Message","compact","header","React","open","setOpen","mathod","Modal","size","onClose","onOpen","trigger","LoginForm","RegistrationForm","passwordConfirmation","store","registration","Actions","Menu","to","position","LoginModal","RegistrationModal","NoMatch","Container","MainMenu","priceFrom","priceTo","filters","setFilters","isInitialMount","useRef","catalogueLoading","setCatalogueLoading","current","handleValueChange","disabled","widths","fluid","secondary","order","sort","setSort","handleItemClick","text","productProperties","setProductProperties","handleChangeProductProperties","TextArea","ProductEditingForm","AdminPanel","ProductEditingModal","width","ProductFilters","path","SortBy","ProductManaging","ProductCreationForm","Card","ProductCard","Catalog","exact","CatalogPage","basename","Main","processProducts","schema","request","all","regex","RegExp","filter","attrs","match","b","localeCompare","session","Server","models","Model","users","factories","Factory","extend","i","surname","routes","this","get","post","reguest","parse","requestBody","findBy","Response","create","patch","del","sid","Math","round","random","now","cookieExpiration","getTime","document","cookie","toUTCString","clientSid","split","newAttrs","find","update","ceil","slice","pageNumber","number","seeds","server","createServer","ReactDOM","render","StrictMode","App","getElementById"],"mappings":"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","file":"static/js/main.f977b072.chunk.js","sourcesContent":["export default {\r\n    registrationRequest: \"USER_REGISTRATION_REQUEST\",\r\n    registrationSuccess: \"USER_REGISTRATION_SUCCESS\",\r\n    registrationFailure: \"USER_REGISTRATION_FAILURE\",\r\n    loginRequest: \"USER_LOGIN_REQUEST\",\r\n    loginSuccess: \"USER_LOGIN_SUCCESS\",\r\n    loginFailure: \"USER_LOGIN_FAILURE\",\r\n    logout: \"USER_LOGOUT\",\r\n    deleteRequest: \"USER_LOGIN_REQUEST\",\r\n    deleteSuccess: \"USER_LOGIN_SUCCESS\",\r\n    deleteFailure: \"USER_LOGIN_FAILURE\",\r\n    getAllUsersRequest: \"GET_ALL_USERS_REQUEST\",\r\n    getAllUsersSuccess: \"GET_ALL_USERS_SUCCESS\",\r\n    getAllUsersFailure: \"GET_ALL_USERS_FAILURE\",\r\n    setCurrentStatus: \"SET_CURRENT_STATUS\",\r\n    setErrorMessage: \"SET_ERROR_MESSAGE\",\r\n}","export default {\r\n    loginRequest: \"Logging in\",\r\n    loginSuccess: \"Logged in\",\r\n    loginFailure: \"Login attempt failed!\",\r\n    notLoggedIn: \"Not logged in\",\r\n    registrationRequest: \"Registration\",\r\n    registrationSuccess: \"Registration completed\",\r\n    registrationFailure: \"Registration failed\",\r\n}","import actionTypes from \"../actionTypes/userActionTypes\";\r\nimport userStatuses from \"../../constants/userStatuses\";\r\n\r\nconst initialState = {\r\n    isLoggedIn: false,\r\n    userType: \"\",\r\n    currentStatus: userStatuses.notLoggedIn,\r\n    error: \"\"\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actionTypes.loginRequest:\r\n            return {\r\n                ...state,\r\n                currentStatus: userStatuses.loginRequest,\r\n                error: \"\"\r\n            };\r\n\r\n        case actionTypes.loginSuccess:\r\n            return {\r\n                ...state,\r\n                isLoggedIn: true,\r\n                userType: action.userType,\r\n                currentStatus: userStatuses.loginSuccess,\r\n                email: action.email,\r\n                error: \"\"\r\n            };\r\n\r\n        case actionTypes.loginFailure:\r\n            return {\r\n                ...state,\r\n                currentStatus: userStatuses.loginFailure,\r\n                error: action.error\r\n            };\r\n\r\n        case actionTypes.registrationRequest:\r\n            return {\r\n                ...state,\r\n                currentStatus: userStatuses.registrationRequestm,\r\n                error: \"\"\r\n            };\r\n\r\n        case actionTypes.registrationSuccess:\r\n            return {\r\n                ...state,\r\n                currentStatus: userStatuses.registrationSuccess,\r\n                error: \"\"\r\n            };\r\n\r\n        case actionTypes.registrationFailure:\r\n            return {\r\n                ...state,\r\n                currentStatus: userStatuses.registrationFailure,\r\n                error: action.error \r\n            };\r\n\r\n        case actionTypes.setErrorMessage:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case actionTypes.setCurrentStatus:\r\n            return {\r\n                ...state,\r\n                currentStatus: userStatuses.setCurrentStatus,\r\n                status: action.status \r\n            };\r\n\r\n        case actionTypes.logout:\r\n            return initialState;\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export default {\r\n    getProductsRequest: \"GET_PRODUCTS_REQUEST\",\r\n    getProductsSuccess: \"GET_PRODUCTS_SUCCESS\",\r\n    getProductsFailure: \"GET_PRODUCTS_FAILURE\",\r\n    updateProductRequest: \"UPDATE_PRODUCT_REQUEST\",\r\n    updateProductSuccess: \"UPDATE_PRODUCT_SUCCESS\",\r\n    updateProductFailure: \"UPDATE_PRODUCT_FAILURE\",\r\n    getProductPagesNumber: \"GET_PRODUCT_PAGES_NUMBER\",\r\n    setProductPagesNumber: \"SET_PRODUCT_PAGES_NUMBER\",\r\n    setProductsList: \"SET_PRODUCTS_LIST\",\r\n    setProductsPage: \"SET_PRODUCTS_PAGE\",\r\n    addProduct: \"ADD_PRODUCT\",\r\n    addProductSuccess: \"CREATE_PRODUCT_SUCCESS\",\r\n    addProductFailure: \"CREATE_PRODUCT_FAILURE\",\r\n    resetProducts: \"RESET_PRODUCTS\",\r\n    deleteProduct: \"DELETE_PRODUCT\",\r\n    setCurrentAction: \"SET_CURRENT_ACTION\",\r\n    setErrorMessage: \"SET_ERROR_MESSAGE\",\r\n    setQueryParams: \"SET_QUERY_PARAMS\",\r\n    showEditingModal: \"SHOW_EDITING_MODAL\",\r\n    closeEditingModal: \"CLOSE_EDITING_MODAL\",\r\n    setCurrentProduct: \"SET_CURRENT_PRODUCT\"\r\n}","import actionTypes from \"../actionTypes/productActionTypes\";\r\nimport productActionTypes from \"../actionTypes/productActionTypes\";\r\n\r\nconst initialState = {\r\n    items: [],\r\n    pagesNumber: 1,\r\n    page: 1,\r\n    currentAction: \"\",\r\n    error: \"\",\r\n    queryParams: {},\r\n    showEditingModal: false,\r\n    currentProduct: null\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n    switch(action.type) {\r\n        case actionTypes.setProductPagesNumber:\r\n            return {\r\n                ...state,\r\n                pagesNumber: action.pagesNumber,\r\n            };\r\n\r\n        case actionTypes.setProductsPage:\r\n            return {\r\n                ...state,\r\n                page: action.page,\r\n            };\r\n\r\n        case actionTypes.setProductsList:\r\n            return {\r\n                ...state,\r\n                items: action.items\r\n            };\r\n\r\n        case actionTypes.resetProducts: \r\n            return initialState;\r\n\r\n        case actionTypes.getProductsRequest:\r\n            return {\r\n                ...state,\r\n                currentAction: productActionTypes.getProductsRequest,\r\n            };\r\n\r\n        case actionTypes.getProductsSuccess:\r\n            return {\r\n                ...state,\r\n                currentAction: productActionTypes.getProductsSuccess,\r\n            };\r\n\r\n        case actionTypes.getProductsFailure:\r\n            return {\r\n                ...state,\r\n                currentAction: productActionTypes.getProductsFailure,\r\n            };\r\n\r\n        case actionTypes.updateProductRequest:\r\n            return {\r\n                ...state,\r\n                currentAction: productActionTypes.updateProductRequest,\r\n            };\r\n\r\n        case actionTypes.updateProductSuccess:\r\n            return {\r\n                ...state,\r\n                currentAction: productActionTypes.updateProductSuccess,\r\n            };\r\n\r\n        case actionTypes.updateProductFailure:\r\n            return {\r\n                ...state,\r\n                currentAction: productActionTypes.updateProductFailure,\r\n            };\r\n\r\n        case actionTypes.setErrorMessage:\r\n            return {\r\n                ...state,\r\n                error: action.error\r\n            };\r\n\r\n        case actionTypes.setcurrentAction:\r\n            return {\r\n                ...state,\r\n                status: action.currentAction\r\n            };\r\n\r\n        case actionTypes.setQueryParams:\r\n            return {\r\n                ...state,\r\n                queryParams: {...state.queryParams, ...action.queryParams}\r\n            };\r\n\r\n        case actionTypes.showEditingModal:\r\n            return {...state, showEditingModal: true};\r\n\r\n        case actionTypes.closeEditingModal:\r\n            return {...state, showEditingModal: false};\r\n\r\n        case actionTypes.setCurrentProduct:\r\n            return {...state, currentProduct: action.product};\r\n            \r\n        default: \r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport user from \"./userReducers\";\r\nimport products from \"./productsReducers\";\r\n\r\n\r\nexport default combineReducers({\r\n    user,\r\n    products\r\n});","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(rootReducer, compose(\r\n    applyMiddleware(thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f\r\n));","import actionTypes from \"../actionTypes/productActionTypes\";\r\n\r\nexport const getProductsRequest = params => async dispatch => {\r\n    let url = \"https://thelonerover.github.io/catalog-spa/products\";\r\n\r\n    if(params.page) {\r\n        url += `/page/${params.page}`;\r\n    }\r\n    if(params.queryParams) {\r\n        let queryParams = [];\r\n        for(let param in params.queryParams) {\r\n            if(params.queryParams[param] !== \"\") {\r\n                queryParams.push(`${param}=${params.queryParams[param]}`);\r\n            }\r\n        }\r\n        queryParams = queryParams.join(\"&\");\r\n        if (queryParams.length > 0) {\r\n            url += `/?${queryParams}`;\r\n        }\r\n    }\r\n\r\n    dispatch({ type: actionTypes.getProductsRequest });\r\n\r\n    let response;\r\n    try {\r\n        response = await fetch(url);\r\n        let body = await response.json();\r\n        \r\n        if (response.ok) {\r\n            dispatch(getProductsSuccess());\r\n            dispatch(setProductPagesNumber(body.numberOfPages));\r\n            dispatch(setProductsList(body.products));\r\n        } else {\r\n            dispatch(getProductsFailure());\r\n        }\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\n\r\nexport const getProductsSuccess = () => ({type: actionTypes.getProductsSuccess});\r\n\r\nexport const getProductsFailure = () => ({type: actionTypes.getProductsFailure});\r\n\r\nexport const updateProduct = productData => async dispatch => {\r\n    const url = `https://thelonerover.github.io/catalog-spa/products/${productData.id}`;\r\n    dispatch({ type: actionTypes.updateProductRequest });\r\n\r\n    const requestOptions = {\r\n        method: \"PATCH\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({...productData})\r\n    }\r\n\r\n    let response;\r\n    try {\r\n        response = await fetch(url, requestOptions);\r\n        \r\n        if (response.ok) {\r\n            dispatch(udpateProductSuccess());\r\n        } else {\r\n            dispatch(udpateProductFailure());\r\n        }\r\n    } catch (error) {\r\n        console.error(error)\r\n    }\r\n}\r\n\r\nexport const udpateProductSuccess = () => ({type: actionTypes.updateProductSuccess});\r\n\r\nexport const udpateProductFailure = () => ({type: actionTypes.updateProductFailure});\r\n\r\nexport const setProductPagesNumber = pagesNumber => ({\r\n    type: actionTypes.setProductPagesNumber,\r\n    pagesNumber\r\n});\r\n\r\nexport const setProductsList = items => ({\r\n    type: actionTypes.setProductsList,\r\n    items\r\n});\r\n\r\nexport const setProductsPage = page => ({\r\n    type: actionTypes.setProductsPage,\r\n    page\r\n});\r\n\r\n\r\nexport const addProduct = product => async dispatch => {\r\n    dispatch({ type: actionTypes.addProduct });\r\n\r\n    const requestOptions = { \r\n        method: \"POST\",\r\n        headers: {  \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(product)\r\n    };\r\n\r\n    let response;\r\n    try {\r\n        response = await fetch(\"https://thelonerover.github.io/catalog-spa/products\", requestOptions);\r\n\r\n        if (response.ok) {\r\n            dispatch(addProductSuccess());\r\n        } else {\r\n            dispatch(addProductFailure());\r\n        }\r\n    } catch (error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nexport const addProductSuccess = () => ({type: actionTypes.addProductSuccess});\r\n\r\nexport const addProductFailure = () => ({type: actionTypes.addProductFailure});\r\n\r\nexport const resetProducts = () => ({type: actionTypes.resetProducts});\r\n\r\nexport const deleteProduct = id => async dispatch => {\r\n    dispatch({type: actionTypes.deleteProduct});\r\n    try {\r\n        await fetch(`https://thelonerover.github.io/catalog-spa/products/${id}`, { method: \"DELETE\" });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n};\r\n\r\nexport const setErrorMessage = error => ({\r\n    type: actionTypes.setErrorMessage,\r\n    error\r\n});\r\n\r\nexport const setCurrentAction = currentAction => ({\r\n    type: actionTypes.setCurrentAction,\r\n    currentAction\r\n});\r\n\r\nexport const setQueryParams = queryParams => ({\r\n    type: actionTypes.setQueryParams,\r\n    queryParams\r\n});\r\n\r\nexport const showEditingModal = () => ({\r\n    type: actionTypes.showEditingModal,\r\n});\r\n\r\nexport const closeEditingModal = () => ({\r\n    type: actionTypes.closeEditingModal,\r\n});\r\n\r\nexport const setCurrentProduct = product => ({\r\n    type: actionTypes.setCurrentProduct,\r\n    product\r\n});","import React from \"react\";\r\nimport { Item, Button } from \"semantic-ui-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductsRequest, deleteProduct, showEditingModal, setCurrentProduct } from \"../../store/actions/productsActions\";\r\n\r\n\r\nexport default props => {\r\n  const dispatch = useDispatch();\r\n  const products = useSelector(state => state.products);\r\n  const date = new Date(props.creationDate);\r\n  const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n\r\n  const handleDelete = id => () => {\r\n    dispatch(deleteProduct(id));\r\n    dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n  }\r\n\r\n  const handleEditModal = productData => () => {\r\n    dispatch(showEditingModal());\r\n    dispatch(setCurrentProduct(productData));\r\n  }\r\n\r\n  return (\r\n    <Item>\r\n      <Item.Content> \r\n        <Item.Header as=\"a\">{props.name}</Item.Header>\r\n        <Item.Meta>\r\n            <span className=\"date\">Created on {formattedDate}</span>\r\n        </Item.Meta>\r\n        <Item.Description>\r\n            {props.description}\r\n        </Item.Description>\r\n        <span>{props.price}</span>\r\n        <Item.Extra>\r\n          <Button basic floated=\"right\" color=\"red\" onClick={handleDelete(props.id)}>Delete</Button>\r\n          <Button primary floated=\"right\" onClick={handleEditModal(props)}>Edit</Button>\r\n        </Item.Extra>\r\n      </Item.Content>\r\n    </Item>\r\n  );\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport { Grid, Pagination, Item, Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getProductsRequest, setProductsPage, resetProducts } from \"../../store/actions/productsActions\";\r\nimport productActionTypes from \"../../store/actionTypes/productActionTypes\";\r\nimport ProductItem from \"../ProductItem\";\r\n \r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.products);\r\n    const [itemsLoading, setItemsLoading] = useState(true);\r\n\r\n    useEffect(() => () => dispatch(resetProducts()), []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n    }, [products.page]);\r\n\r\n    useEffect(() => {\r\n        switch(products.currentAction) {\r\n            case productActionTypes.getProductsRequest:\r\n                setItemsLoading(true);\r\n                break;\r\n            case productActionTypes.getProductsSuccess:\r\n                setItemsLoading(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [products.currentAction]); \r\n\r\n    const handlePaginationChange = (e, { activePage }) => {\r\n        dispatch(setProductsPage(activePage));\r\n    };\r\n\r\n    return (\r\n            <Grid columns={1} relaxed padded=\"vertically\">\r\n                <Grid.Row>\r\n                    {itemsLoading && \r\n                    <Dimmer active inverted>\r\n                        <Loader inverted content=\"Loading products\" />\r\n                    </Dimmer>}\r\n                    <Grid.Column>\r\n                        <Item.Group divided>\r\n                            {products.items.map(product => (\r\n                                <ProductItem key={product.id} {...product} />\r\n                            ))}\r\n                        </Item.Group>\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n                <Grid.Row>\r\n                    <Grid.Column>\r\n                        <Pagination \r\n                            defaultActivePage={1}\r\n                            activePage={products.activePage}\r\n                            totalPages={products.pagesNumber} \r\n                            onPageChange={handlePaginationChange} \r\n                        />\r\n                    </Grid.Column>\r\n                </Grid.Row>\r\n            </Grid>\r\n    );\r\n}","import actionTypes from \"../actionTypes/userActionTypes\";\r\n\r\nexport const login = credentials => async dispatch => {\r\n    dispatch(loginRequest(credentials));\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            email: credentials.email,\r\n            password: credentials.password\r\n        })\r\n    }\r\n\r\n    let response;\r\n    try {\r\n        response = await fetch(\"https://thelonerover.github.io/catalog-spa/login\", requestOptions);\r\n        let body = await response.json();\r\n\r\n        if (response.ok) {\r\n            dispatch(loginSuccess(body.email, body.type));\r\n        } else {\r\n            dispatch(loginFailure(body.error));\r\n        }\r\n    } catch(error) {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\n\r\nexport const loginRequest = (email, password) => ({\r\n        type: actionTypes.loginRequest,\r\n        email,\r\n        password\r\n});\r\n\r\n\r\nexport const loginSuccess = (email, userType) => ({\r\n    type: actionTypes.loginSuccess,\r\n    email,\r\n    userType\r\n});\r\n\r\nexport const loginFailure = error => ({ \r\n    type: actionTypes.loginFailure,\r\n    error\r\n});\r\n\r\nexport const registration = credentials => async dispatch => {\r\n    dispatch(registrationRequest(credentials));\r\n\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: {  \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({\r\n            email: credentials.email,\r\n            password: credentials.password,\r\n            type: \"C\"\r\n        }),\r\n    }\r\n\r\n    let response;\r\n    try {\r\n        response = await fetch(\"https://thelonerover.github.io/catalog-spa/users\", requestOptions);\r\n        let body = await response.json();\r\n\r\n        if (response.ok) {\r\n            dispatch(registrationSuccess());\r\n        } else {\r\n            dispatch(registrationFailure(body.error));\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\n\r\nexport const registrationRequest = credentials => ({\r\n        type: actionTypes.registrationRequest,\r\n        email: credentials.email,\r\n        password: credentials.password\r\n});\r\n\r\n\r\nexport const registrationSuccess = () => ({ type: actionTypes.registrationSuccess });\r\n\r\nexport const registrationFailure = error=> ({ \r\n    type: actionTypes.registrationFailure,\r\n    error\r\n});\r\n\r\nexport const logout = () => ({ type: actionTypes.logout });\r\n\r\nexport const setErrorMessage = error => ({\r\n    type: actionTypes.setErrorMessage,\r\n    error\r\n});\r\n\r\nexport const setCurrentStatus = status => ({\r\n    type: actionTypes.setCurrentStatus,\r\n    status\r\n});\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Input, Form, Message, Button } from \"semantic-ui-react\";\r\nimport { login, setErrorMessage, setCurrentStatus } from \"../../store/actions/userActions\";\r\nimport userStatuses from \"../../constants/userStatuses\";\r\n\r\nexport default () => {\r\n    const [credentials, setCredentials] = useState({ email: \"admin@example.com\", password: \"123\" });\r\n    const initialFormErrors = {email: false, password: false};\r\n    const [formErrors, setFormErrors] = useState({...initialFormErrors});\r\n    const user = useSelector(state => state.user);\r\n    const [formState, setFormState] = useState({});\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => () => {\r\n        resetErrors();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        switch(user.currentStatus) {\r\n            case userStatuses.loginRequest:\r\n                setFormState({loading: true});\r\n                break;\r\n            case userStatuses.loginSuccess:\r\n                setFormState({success: true});\r\n                break;\r\n            case userStatuses.loginFailure:\r\n                setFormState({error: true});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [user.currentStatus]);\r\n\r\n    const handleChangeCredentials = fieldName => e => {\r\n        e.preventDefault();\r\n        setCredentials({...credentials, [fieldName]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(setErrorMessage(\"\"));\r\n        setFormState({});\r\n\r\n        let errors = {...initialFormErrors};\r\n        if(!credentials.email) {\r\n            errors.email = { content: \"Please enter a valid email address!\", pointing: \"below\" };\r\n        }\r\n        if(!credentials.password) {\r\n            errors.password = { content: \"Please enter a valid password!\", pointing: \"below\" };\r\n        }\r\n        setFormErrors(errors);\r\n        if(credentials.email && credentials.password) {\r\n            resetErrors();\r\n            dispatch(login(credentials));\r\n        }\r\n    }\r\n\r\n    const resetErrors = () => {\r\n        setFormState({});\r\n        setFormErrors({...initialFormErrors});\r\n        dispatch(setErrorMessage(\"\"));\r\n        dispatch(setCurrentStatus(\"\"));\r\n    }\r\n    \r\n    return (\r\n        <div>\r\n            <Form method=\"post\" action=\"/login\" {...formState} onSubmit={e => {e.preventDefault()}}> \r\n                <Form.Field\r\n                    type=\"email\"\r\n                    control={Input}\r\n                    label=\"E-mail\"\r\n                    placeholder=\"E-mail\"\r\n                    onChange={handleChangeCredentials(\"email\")}\r\n                    label={{ icon: \"asterisk\" }}\r\n                    value={credentials.email}\r\n                    error={formErrors.email}\r\n                />\r\n                <Form.Field\r\n                    type=\"password\"\r\n                    control={Input}\r\n                    label=\"Password\"\r\n                    placeholder=\"Password\"\r\n                    onChange={handleChangeCredentials(\"password\")}\r\n                    label={{ icon: \"asterisk\" }}\r\n                    value={credentials.password}\r\n                    error={formErrors.password}\r\n                />\r\n                <Button color=\"blue\" name=\"login\" onClick={handleSubmit}>Log In</Button>\r\n            </Form>\r\n            {formState.error && \r\n            <Message\r\n                compact\r\n                {...formState}\r\n                header={user.error}\r\n            />}\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Form } from \"semantic-ui-react\";\r\nimport { logout } from \"../../store/actions/userActions\";\r\nimport LoginForm from \"../LoginForm\";\r\n\r\nexport default () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const user = useSelector(state => state.user);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleLogout = e => {\r\n        e.preventDefault();\r\n        setOpen(false);\r\n        dispatch(logout());\r\n    }\r\n\r\n    return (\r\n        user.isLoggedIn ?\r\n        <Form mathod=\"POST\" action=\"logout\" onSubmit={e => {e.preventDefault()}}>\r\n            <Button onClick={handleLogout}>Log out</Button>\r\n        </Form> : \r\n        <Modal\r\n            size=\"mini\"\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<Button primary>Log in</Button>}\r\n            >\r\n            <Modal.Header>Log in</Modal.Header>\r\n            <Modal.Content>\r\n                <LoginForm />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}\r\n","import React, { useState, useEffect }  from \"react\";\r\nimport { Input, Form, Message, Button } from \"semantic-ui-react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { registration, setErrorMessage, setCurrentStatus } from \"../../store/actions/userActions\";\r\nimport userStatuses from \"../../constants/userStatuses\";\r\n\r\nexport default function RegistrationForm() {\r\n    const [credentials, setCredentials] = useState({ email: \"\", password: \"\", passwordConfirmation: \"\" });\r\n    const [formState, setFormState] = useState({});\r\n    const initialFormErrors = {email: false, password: false, passwordConfirmation: false}\r\n    const [formErrors, setFormErrors] = useState({...initialFormErrors});\r\n    const user = useSelector(store => store.user)\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => () => {\r\n        resetErrors();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        switch(user.currentStatus) {\r\n            case userStatuses.registrationRequest:\r\n                setFormState({loading: true});\r\n                break;\r\n            case userStatuses.registrationFailure:\r\n                setFormState({error: true});\r\n                break;\r\n            case userStatuses.registrationSuccess:\r\n                setFormState({success: true});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [user.currentStatus]);\r\n\r\n    const handleChangeCredentials = fieldName => e => {\r\n        e.preventDefault();\r\n        setCredentials({...credentials, [fieldName]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        let errors = {...initialFormErrors};\r\n        if(!credentials.email) {\r\n            errors.email = { content: \"Please enter a login!\", pointing: \"below\" };\r\n        }\r\n        if(!credentials.password) {\r\n            errors.password = { content: \"Please enter a password!\", pointing: \"below\" };\r\n        }\r\n        if(!(credentials.password === credentials.passwordConfirmation)) {\r\n            errors.passwordConfirmation = { content: \"Passwords do not match!\", pointing: \"below\" };\r\n        }\r\n        console.log(credentials.password && !credentials.password === credentials.passwordConfirmation);\r\n        setFormErrors(errors);\r\n        \r\n        if (credentials.email && \r\n            credentials.password && \r\n            credentials.passwordConfirmation && \r\n            credentials.password === credentials.passwordConfirmation) {\r\n                resetErrors();\r\n                dispatch(registration(credentials));\r\n        } else {\r\n            setFormState({error: true});\r\n        }\r\n    }\r\n\r\n    const resetErrors = () => {\r\n        setFormState({});\r\n        setFormErrors({...initialFormErrors});\r\n        dispatch(setErrorMessage(\"\"));\r\n        dispatch(setCurrentStatus(\"\"));\r\n    }\r\n\r\n    return (user.currentStatus !== userStatuses.registrationSuccess ?\r\n        <Form method=\"post\" {...formState} action=\"/users\" onSubmit={e => {e.preventDefault()}}>\r\n            <Form.Field\r\n                type=\"email\"\r\n                control={Input}\r\n                label=\"E-mail\"\r\n                placeholder=\"E-mail\"\r\n                onChange={handleChangeCredentials(\"email\")}\r\n                value={credentials.email}\r\n                error={formErrors.email}\r\n            />\r\n            <Form.Field\r\n                type=\"password\"\r\n                control={Input}\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                onChange={handleChangeCredentials(\"password\")}\r\n                value={credentials.password}\r\n                error={formErrors.password}\r\n            />\r\n            <Form.Field\r\n                type=\"password\"\r\n                control={Input}\r\n                label=\"Confirm password\"\r\n                placeholder=\"Confirm password\"\r\n                onChange={handleChangeCredentials(\"passwordConfirmation\")}\r\n                value={credentials.passwordConfirmation}\r\n                error={formErrors.passwordConfirmation}\r\n            />\r\n            <Button color=\"blue\" name=\"register\" onClick={handleSubmit}>Create an account</Button>\r\n        </Form> :\r\n        <Message\r\n            {...formState}\r\n            header={user.currentStatus}\r\n        />\r\n    );\r\n}","import React from \"react\";\r\nimport { Modal, Button } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport RegistrationForm from \"../RegistrationForm\";\r\nimport userStatuses from \"../../constants/userStatuses\";\r\n\r\nexport default () => {\r\n    const [open, setOpen] = React.useState(false);\r\n    const user = useSelector(state => state.user);\r\n\r\n    return (\r\n        <Modal\r\n            size=\"mini\"\r\n            onClose={() => setOpen(false)}\r\n            onOpen={() => setOpen(true)}\r\n            open={open}\r\n            trigger={<Button basic>Register</Button>}\r\n            >\r\n            <Modal.Header>Register</Modal.Header>\r\n            <Modal.Content >\r\n                <RegistrationForm />\r\n            </Modal.Content>\r\n            {user.currentStatus === userStatuses.registrationSuccess &&\r\n            <Modal.Actions>\r\n                <Button color=\"green\" onClick={() => setOpen(false)}>Done!</Button>\r\n            </Modal.Actions>}\r\n        </Modal>\r\n    );\r\n}\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {  Menu } from \"semantic-ui-react\";\r\nimport LoginModal from \"../LoginModal\";\r\nimport RegistrationModal from \"../RegistrationModal\";\r\n\r\nexport default () => {\r\n    const user = useSelector(state => state.user);\r\n\r\n    return (\r\n        <Menu>\r\n            <Menu.Item name=\"catalog\">\r\n                <Link to=\"/\">Catalog</Link>\r\n            </Menu.Item>\r\n            {user.userType === \"A\" &&\r\n            <Menu.Item name=\"admin-panel\">\r\n                <Link to=\"admin-panel\">Admin panel</Link>\r\n            </Menu.Item>}\r\n            <Menu.Menu position='right'>\r\n                <Menu.Item name=\"login\">\r\n                    <LoginModal />\r\n                </Menu.Item>\r\n                {!user.isLoggedIn && \r\n                <Menu.Item name=\"registration\">\r\n                    <RegistrationModal />\r\n                </Menu.Item>}\r\n            </Menu.Menu>\r\n        </Menu>\r\n    );\r\n}","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport MainMenu from \"../../components/MainMenu\";\r\n\r\nexport default function NoMatch() {\r\n    return (\r\n        <Container>\r\n            <MainMenu />\r\n            <p>404</p>\r\n        </Container>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Input, Form, Button, Header } from \"semantic-ui-react\";\r\nimport { setQueryParams, getProductsRequest } from \"../../store/actions/productsActions\";\r\nimport productActionTypes from \"../../store/actionTypes/productActionTypes\";\r\n\r\nexport default () => {\r\n    const [filters, setFilters] = useState({name: \"\", priceFrom: \"\", priceTo: \"\"});\r\n    const products = useSelector(state => state.products);\r\n    const dispatch = useDispatch();\r\n    const isInitialMount = useRef(true);\r\n    const [catalogueLoading, setCatalogueLoading] = useState(true);\r\n\r\n    useEffect(() => () => {\r\n        dispatch(setQueryParams({}));\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        isInitialMount.current ? isInitialMount.current = false : dispatch(setQueryParams(filters));\r\n    }, [filters]);  \r\n    \r\n    useEffect(() => {\r\n        switch(products.currentAction) {\r\n            case productActionTypes.getProductsRequest:\r\n                setCatalogueLoading(true);\r\n                break;\r\n            case productActionTypes.getProductsSuccess:\r\n                setCatalogueLoading(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [products.currentAction]);\r\n    \r\n    const handleValueChange = fieldName => e => {\r\n        e.preventDefault();\r\n        setFilters({...filters, [fieldName]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n    }\r\n    \r\n    return (\r\n        <Form method=\"post\" action=\"/login\" onSubmit={e => {e.preventDefault()}}> \r\n            <Header\r\n                as=\"h3\"\r\n                content=\"Product filters\"\r\n            />\r\n            <Form.Field\r\n                type=\"name\"\r\n                control={Input}\r\n                placeholder=\"Product name\"\r\n                onChange={handleValueChange(\"name\")}\r\n                value={filters.name}\r\n                disabled={catalogueLoading}\r\n            />\r\n            <Form.Group widths=\"equal\">\r\n                <Form.Field\r\n                    fluid\r\n                    type=\"number\"\r\n                    control={Input}\r\n                    placeholder=\"Price from\"\r\n                    onChange={handleValueChange(\"priceFrom\")}\r\n                    value={filters.priceFrom}\r\n                    disabled={catalogueLoading}\r\n                />\r\n                <Form.Field\r\n                    fluid\r\n                    type=\"number\"\r\n                    control={Input}\r\n                    placeholder=\"to\"\r\n                    onChange={handleValueChange(\"priceTo\")}\r\n                    value={filters.priceTo}\r\n                    disabled={catalogueLoading}\r\n                />\r\n            </Form.Group>\r\n            <Button type=\"submit\" secondary name=\"submit\" onClick={handleSubmit} loading={catalogueLoading}>Show products</Button>\r\n        </Form>\r\n    );\r\n}","import React, { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setQueryParams, getProductsRequest } from \"../../store/actions/productsActions\";\r\nimport { Menu } from \"semantic-ui-react\";\r\n\r\nexport default () => {\r\n  const [sort, setSort] = useState({ type: \"\", order: true});\r\n  const products = useSelector(state => state.products);\r\n  const dispatch = useDispatch();\r\n  const isInitialMount = useRef(true);\r\n\r\n  useEffect(() => () => {\r\n    dispatch(setQueryParams({}));\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (!isInitialMount.current) {\r\n      dispatch(setQueryParams({sort: `${sort.type}-${sort.order ? \"descend\" : \"ascend\"}`}));\r\n\r\n    }\r\n  }, [sort]);\r\n\r\n  useEffect(() => {\r\n    isInitialMount.current ? isInitialMount.current = false : dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n  }, [products.queryParams.sort]);\r\n  \r\n  const handleItemClick = (e, { name }) => {\r\n    if (sort.type === name) {\r\n      setSort({...sort, order: !sort.order});\r\n    } else {\r\n      setSort({...sort, type: name, order: true});\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Menu text>\r\n      <Menu.Item header>Sort By</Menu.Item>\r\n      <Menu.Item\r\n        name=\"name\"\r\n        active={sort.type === \"name\"}\r\n        onClick={handleItemClick}\r\n        content={`Name${sort.type === \"name\" ? sort.order ? \" ▼\" : \" ▲\" : \"\"}`}\r\n      />\r\n      <Menu.Item\r\n        name=\"price\"\r\n        active={sort.type === \"price\"}\r\n        onClick={handleItemClick}\r\n        content={`Price${sort.type === \"price\" ? sort.order ? \" ▼\" : \" ▲\" : \"\"}`}\r\n      />\r\n      <Menu.Item\r\n        name=\"date\"\r\n        active={sort.type === \"date\"}\r\n        onClick={handleItemClick}\r\n        content={`Creation date${sort.type === \"date\" ? sort.order ? \" ▼\" : \" ▲\" : \"\"}`}\r\n      />\r\n    </Menu>\r\n  )\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Input, Form, TextArea, Message, Button } from \"semantic-ui-react\";\r\nimport { addProduct, getProductsRequest } from \"../../store/actions/productsActions\";\r\n\r\nexport default () => {\r\n    const [formState, setFormState] = useState({});\r\n    const [productProperties, setProductProperties] = useState({name: \"\", description: \"\", price: 0 });\r\n    const initialFormErrors = {name: false};\r\n    const products = useSelector(state => state.products);\r\n    const [formErrors, setFormErrors] = useState({...initialFormErrors});\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => () => {\r\n        resetErrors();\r\n    }, []);\r\n\r\n    const resetErrors = () => {\r\n        setFormState({});\r\n        setFormErrors({...initialFormErrors});\r\n    }\r\n\r\n    const handleChangeProductProperties = fieldName => e => {\r\n        e.preventDefault();\r\n        setProductProperties({...productProperties, [fieldName]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setFormState({});\r\n\r\n        let errors = {...initialFormErrors};\r\n        if(!productProperties.name) {\r\n            errors.name = { content: \"Please enter a valid name!\", pointing: \"below\" };\r\n        }\r\n        setFormErrors(errors);\r\n\r\n        if(productProperties.name) {\r\n            resetErrors();\r\n            dispatch(addProduct(productProperties));\r\n            dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n        }\r\n      }\r\n    \r\n    return (\r\n        <Form method=\"post\" action=\"/products\" {...formState} onSubmit={e => {e.preventDefault()}}>\r\n            <Form.Field\r\n                type=\"text\"\r\n                control={Input}\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeProductProperties(\"name\")}\r\n                value={productProperties.name}\r\n                error={formErrors.name}\r\n            />\r\n            <Form.Field\r\n                control={TextArea}\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                placeholder=\"Description\"\r\n                onChange={handleChangeProductProperties(\"description\")}\r\n                value={productProperties.description}\r\n            />\r\n            <Form.Field\r\n                type=\"number\"\r\n                control={Input}\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                placeholder=\"Price\"\r\n                onChange={handleChangeProductProperties(\"price\")}\r\n                value={productProperties.price}\r\n            />\r\n            <Button color=\"blue\" name=\"update\" onClick={handleSubmit}>Add product</Button>\r\n            {formState.error && \r\n            <Message\r\n                compact\r\n                {...formState}\r\n                header={products.error}\r\n            />}\r\n        </Form>\r\n    );\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Input, Form, TextArea, Button } from \"semantic-ui-react\";\r\nimport { updateProduct, setCurrentAction, getProductsRequest, closeEditingModal } from \"../../store/actions/productsActions\";\r\n\r\nexport default product => {\r\n    const [formState, setFormState] = useState({});\r\n    const [productProperties, setProductProperties] = useState({id: product.id,  name: product.name, description: product.description, price: product.price });\r\n    const initialFormErrors = {name: false};\r\n    const [formErrors, setFormErrors] = useState({...initialFormErrors});\r\n    const products = useSelector(state => state.products);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => () => {\r\n        resetErrors();\r\n    }, []);\r\n\r\n    const resetErrors = () => {\r\n        setFormState({});\r\n        setFormErrors({...initialFormErrors});\r\n        dispatch(setCurrentAction(\"\"));\r\n    }\r\n\r\n    const handleChangeProductProperties = fieldName => e => {\r\n        e.preventDefault();\r\n        setProductProperties({...productProperties, [fieldName]: e.target.value});\r\n    }\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setFormState({});\r\n\r\n        let errors = {...initialFormErrors};\r\n        if(!productProperties.name) {\r\n            errors.name = { content: \"Please enter a valid name!\", pointing: \"below\" };\r\n        }\r\n        setFormErrors(errors);\r\n\r\n        if(productProperties.name) {\r\n            // resetErrors();\r\n            dispatch(updateProduct(productProperties));\r\n            dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n        }\r\n\r\n        dispatch(closeEditingModal());\r\n    }\r\n\r\n    const handleClose = () => {\r\n        dispatch(closeEditingModal());\r\n    }\r\n    \r\n    return (\r\n        <Form method=\"post\" action=\"/products\" {...formState} onSubmit={e => {e.preventDefault()}}>\r\n            <Form.Field\r\n                type=\"text\"\r\n                control={Input}\r\n                name=\"name\"\r\n                label=\"Name\"\r\n                placeholder=\"Name\"\r\n                onChange={handleChangeProductProperties(\"name\")}\r\n                value={productProperties.name}\r\n                error={formErrors.name}\r\n            />\r\n            <Form.Field\r\n                control={TextArea}\r\n                name=\"description\"\r\n                label=\"Description\"\r\n                placeholder=\"Description\"\r\n                onChange={handleChangeProductProperties(\"description\")}\r\n                value={productProperties.description}\r\n            />\r\n            <Form.Field\r\n                type=\"number\"\r\n                control={Input}\r\n                name=\"price\"\r\n                label=\"Price\"\r\n                placeholder=\"Price\"\r\n                onChange={handleChangeProductProperties(\"price\")}\r\n                value={productProperties.price}\r\n            />\r\n            <Button primary name=\"update\" onClick={handleSubmit}>Save changes</Button>\r\n            <Button secondary onClick={handleClose}>Cancel</Button>\r\n        </Form>\r\n    );\r\n}","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Modal } from \"semantic-ui-react\";\r\nimport ProductEditingForm from \"../ProductEditingForm\";\r\n\r\nexport default () => {\r\n    const products = useSelector(state => state.products);\r\n\r\n    return (\r\n        <Modal\r\n            size=\"mini\"\r\n            open={products.showEditingModal}\r\n        >\r\n            <Modal.Header>Edit product</Modal.Header>\r\n            <Modal.Content>\r\n                <ProductEditingForm {...products.currentProduct} />\r\n            </Modal.Content>\r\n        </Modal>\r\n    );\r\n}","import React from \"react\";\r\nimport { Container, Grid } from \"semantic-ui-react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport ProductManaging from \"../../components/ProductManaging\";\r\nimport MainMenu from \"../../components/MainMenu\";\r\nimport NoMatch from \"../../pages/NoMatchPage\";\r\nimport ProductFilters from \"../../components/ProductFilters\";\r\nimport SortBy from \"../../components/SortBy\";\r\nimport ProductCreationForm from \"../../components/ProductCreationForm\";\r\nimport ProductEditingModal from \"../../components/ProductEditingModal\";\r\n\r\nexport default function AdminPanel() {\r\n    const user = useSelector(state => state.user);\r\n\r\n    return (\r\n        <Container>\r\n            {user.userType === \"A\" ? \r\n            <div>\r\n                <MainMenu />\r\n                <ProductEditingModal />\r\n                <Grid divided=\"vertically\">\r\n                    <Grid.Row columns={3}>\r\n                        <Grid.Column width={4}>\r\n                            <ProductFilters />\r\n                        </Grid.Column>\r\n                        <Grid.Column width={8}>\r\n                            <Switch>\r\n                                <Route path=\"/admin-panel\">\r\n                                    <SortBy />\r\n                                    <ProductManaging />\r\n                                </Route>\r\n                            </Switch> \r\n                        </Grid.Column>\r\n                        <Grid.Column width={4}>\r\n                            <ProductCreationForm />\r\n                        </Grid.Column>\r\n                    </Grid.Row>\r\n                </Grid>\r\n            </div> :\r\n            <NoMatch />\r\n            }\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport { Card, Image } from \"semantic-ui-react\";\r\n\r\nexport default (props) => {\r\n    const date = new Date(props.creationDate);\r\n    const formattedDate = `${date.getDate()}/${date.getMonth() + 1}/${date.getFullYear()}`;\r\n    \r\n    return (<Card>\r\n        <Card.Content>\r\n            <Card.Header>{props.name}</Card.Header>\r\n            <Card.Meta>\r\n                <span className='date'>Created on {formattedDate}</span>\r\n            </Card.Meta>\r\n            <Card.Description>{props.description}</Card.Description>\r\n            <span>Price: {props.price}</span>\r\n        </Card.Content>\r\n    </Card>);\r\n};","import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Container, Grid, Pagination, Dimmer, Loader } from \"semantic-ui-react\";\r\nimport { getProductsRequest, setProductsPage, resetProducts } from \"../../store/actions/productsActions\";\r\nimport productActionTypes from \"../../store/actionTypes/productActionTypes\";\r\nimport ProductCard from \"../ProductCard\";\r\nimport ProductFilters from \"../ProductFilters\";\r\nimport SortBy from \"../SortBy\";\r\n\r\nexport default () => {\r\n    const dispatch = useDispatch();\r\n    const products = useSelector(state => state.products);\r\n    const [itemsLoading, setItemsLoading] = useState(true);\r\n\r\n    useEffect(() => () => dispatch(resetProducts()), []);\r\n\r\n    useEffect(() => {\r\n        dispatch(getProductsRequest({page: products.page, queryParams: products.queryParams}));\r\n    }, [products.page]);\r\n\r\n    useEffect(() => {\r\n        switch(products.currentAction) {\r\n            case productActionTypes.getProductsRequest:\r\n                setItemsLoading(true);\r\n                break;\r\n            case productActionTypes.getProductsSuccess:\r\n                setItemsLoading(false);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }, [products.currentAction]);   \r\n\r\n    const handlePaginationChange = (e, { activePage }) => {\r\n        dispatch(setProductsPage(activePage));\r\n    };\r\n\r\n    return (\r\n        <Container>\r\n            <Grid columns={2}>\r\n                <Grid.Column width={4}>\r\n                    <ProductFilters />\r\n                </Grid.Column>\r\n                <Grid.Column width={12}>\r\n                    <SortBy />\r\n                    <Grid relaxed>\r\n                        {itemsLoading && \r\n                        <Dimmer active inverted>\r\n                            <Loader inverted content=\"Loading products\" />\r\n                        </Dimmer>}\r\n                        {products.items.map(product => (\r\n                            <Grid.Column width={4} key={product.id}>\r\n                                <ProductCard {...product} />\r\n                            </Grid.Column>\r\n                        ))}\r\n                        <Grid.Row>\r\n                            <Grid.Column>\r\n                                <Pagination \r\n                                    defaultActivePage={1}\r\n                                    activePage={products.activePage}\r\n                                    totalPages={products.pagesNumber} \r\n                                    onPageChange={handlePaginationChange} \r\n                                />\r\n                            </Grid.Column>\r\n                        </Grid.Row>\r\n                    </Grid>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Container>\r\n    );\r\n}","\r\nimport React from \"react\";\r\nimport { Container, Header } from \"semantic-ui-react\";\r\nimport Catalog from \"../../components/Catalog\";\r\n\r\nexport default () => {\r\n    return (\r\n        <Container>\r\n            <Header as=\"h1\">Catalog</Header>\r\n            <Catalog />\r\n        </Container>\r\n    );\r\n}","import React from \"react\";\r\nimport { Container } from \"semantic-ui-react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport MainMenu from \"../MainMenu\";\r\nimport CatalogPage from \"../../pages/CatalogPage\";\r\n\r\nexport default () => {\r\n    return (\r\n        <Container>\r\n            <MainMenu />\r\n            <Switch>\r\n                <Route exact path=\"/\">\r\n                    <CatalogPage />\r\n                </Route>\r\n            </Switch>\r\n        </Container>\r\n    );\r\n}\r\n\r\n","import React from \"react\";\r\nimport { Provider } from 'react-redux';\r\nimport store from \"../../store\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport AdminPanel from \"../../pages/AdminPanel\";\r\nimport Main from \"../Main\";\r\nimport NoMatch from \"../../pages/NoMatchPage\";\r\n\r\nexport default () => (\r\n  <Provider store={store}>\r\n    <Router basename=\"/catalog-spa\">\r\n      <Switch>\r\n          <Route exact path=\"/\">\r\n            <Main />\r\n          </Route>\r\n          <Route path=\"/admin-panel\">\r\n              <AdminPanel />\r\n          </Route>\r\n          <Route>\r\n              <NoMatch />\r\n          </Route>\r\n      </Switch>\r\n    </Router>\r\n  </Provider>\r\n);","import { Server, Model, Factory, Response } from \"miragejs\";\r\n\r\nexport default () => {  \r\n  let session = {};\r\n\r\n  return new Server({\r\n    models: {\r\n      products: Model,\r\n      users: Model\r\n    },\r\n\r\n    factories: {\r\n      product: Factory.extend({\r\n        name(i) { return `Product ${i}`; },\r\n        description(i) { return `A product number ${i}`; },\r\n        price(i) { return +`${i}00`; },\r\n        creationDate() { return new Date() }\r\n      }),\r\n\r\n      user: Factory.extend({\r\n        name(i) { return `Name ${i}`; },\r\n        surname(i) { return `Surname ${i}`;},\r\n        email(i) { return `email${i}@gmail.com`},\r\n        password(i) { return `password${i}`},\r\n        type: \"C\"\r\n      })\r\n    },\r\n\r\n    routes() {\r\n      this.get(\"/users\");\r\n      this.get(\"/users/:id\");\r\n      this.post(\"/users\", (schema, reguest) => {\r\n        let attrs = JSON.parse(reguest.requestBody);\r\n        let existingUser = schema.users.findBy({email: attrs.email});\r\n        if(!existingUser) {\r\n          return schema.users.create(attrs);\r\n        }\r\n\r\n        return new Response( 409, {}, { error: \"The user already exists!\" } );\r\n      });\r\n      this.patch(\"/users/:id\");\r\n      this.del(\"/users/:id\");\r\n\r\n      this.post(\"/login\", (schema, reguest) => {\r\n        let attrs = JSON.parse(reguest.requestBody);\r\n\r\n        let user = schema.users.findBy({ email: attrs.email });\r\n        const sid = Math.round(Math.random() * 10e6);\r\n        \r\n        if (!user) {\r\n          return new Response(401, {}, { error: \"No such user!\" });\r\n        }\r\n\r\n        if(user.attrs.email === attrs.email && user.attrs.password === attrs.password) {\r\n          session[sid] = {...user.attrs};\r\n\r\n          let now = new Date();\r\n          let cookieExpiration = new Date(now.getTime() + 24 * 3600 * 1000);\r\n          document.cookie = `session=${sid}; domain=localhost; path=/; expires=${cookieExpiration.toUTCString()};`\r\n\r\n          return new Response(201, {}, {email: user.attrs.email, type: user.attrs.type});\r\n        }\r\n\r\n        return new Response( 401, {}, { error: \"Wrong username or password!\" } );\r\n      });\r\n\r\n      this.get(\"/products/:id\");\r\n      this.post(\"/products\", (schema, reguest) => {\r\n        let attrs = JSON.parse(reguest.requestBody);\r\n        attrs.creationDate = new Date();\r\n        const clientSid = +document.cookie.split(\"=\")[1];\r\n        \r\n        //super temporary \r\n        if(session[clientSid].type === \"A\") {\r\n          return schema.products.create(attrs);\r\n        } else {\r\n          return new Response(403, {}, { error: \"Forbidden!\" });\r\n        }\r\n      });\r\n      this.patch(\"/products/:id\");\r\n\r\n      this.patch(\"/products/:id\", (schema, request) => {\r\n        const newAttrs = JSON.parse(request.requestBody);\r\n        const id = request.params.id;\r\n        let product = schema.products.find(id);\r\n\r\n        return product.update(newAttrs);\r\n      });\r\n      this.del(\"/products/:id\");\r\n\r\n      this.get(\"/products\", (schema, request) => {\r\n        let offset = 8;\r\n        const products = processProducts(schema, request);\r\n\r\n        const numberOfPages = Math.ceil(products.length / offset);\r\n        \r\n        return {\r\n          products: products.models.slice((numberOfPages - 1) * offset, numberOfPages * offset),\r\n          numberOfPages\r\n        };\r\n      });\r\n      this.get(\"/products/page/:number\", (schema, request) => {\r\n        let offset = 8;\r\n        let pageNumber = request.params.number;\r\n        const products = processProducts(schema, request);\r\n\r\n        const numberOfPages = Math.ceil(products.length / offset);\r\n          \r\n        return {\r\n          products: products.models.slice((pageNumber - 1) * offset, pageNumber * offset),\r\n          numberOfPages\r\n        };\r\n      });\r\n    },\r\n\r\n    seeds(server) {\r\n      server.create(\"user\", {\r\n        email: \"admin@example.com\",\r\n        password: \"123\",\r\n        type: \"A\"\r\n      });\r\n\r\n      for (let i = 0; i < 96; i++) {\r\n        server.create(\"product\");\r\n        server.create(\"user\");  \r\n      }\r\n    }\r\n  })\r\n}\r\n\r\nconst processProducts = (schema, request) => {\r\n  const params = request.queryParams;\r\n  let products = schema.products.all();\r\n\r\n  for (let param in params) {\r\n    switch(param) {\r\n      case \"name\":\r\n        const regex = new RegExp(params[param],\"gi\");\r\n        products = products.filter(product => {\r\n          return !!product.attrs.name.match(regex);\r\n        });\r\n        break;\r\n      case \"priceFrom\":\r\n        products = products.filter(product => {\r\n          return +product.attrs.price >= +params[param];\r\n        });\r\n        break;\r\n      case \"priceTo\":\r\n          products = products.filter(product => {\r\n          return +product.attrs.price <= +params[param];\r\n        });\r\n        break;\r\n      case \"sort\":\r\n        switch (params.sort) {\r\n          case \"name-ascend\":\r\n            products = products.sort((a, b) => a.attrs.name.localeCompare(b.attrs.name));\r\n            break;\r\n          case \"name-descend\":\r\n            products = products.sort((a, b) => b.attrs.name.localeCompare(a.attrs.name));\r\n            break;\r\n          case \"price-ascend\":\r\n            products = products.sort((a, b) => a.attrs.price - b.attrs.price);\r\n            break;\r\n          case \"price-descend\":\r\n            products = products.sort((a, b) => b.attrs.price - a.attrs.price);\r\n            break;\r\n          case \"date-ascend\":\r\n            products = products.sort((a, b) => a.attrs.creationDate - b.attrs.creationDate);\r\n            break;\r\n          case \"date-descend\":\r\n            products = products.sort((a, b) => b.attrs.creationDate - a.attrs.creationDate);\r\n            break;\r\n          default: break;\r\n        }\r\n        break;\r\n      default: break;\r\n    }\r\n  }\r\n  return products;\r\n}","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./components/App\";\r\nimport createServer from \"./helpers/server\";\r\nimport \"semantic-ui-css/semantic.min.css\";\r\n\r\n\r\ncreateServer();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}